<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.supergfxctl.Daemon">
    <!--
     Get supergfxd version
     -->
    <method name="Version">
      <arg type="s" direction="out"/>
    </method>
    <!--
     Get the current graphics mode:
     enum GfxMode {
      Hybrid,
      Integrated,
      NvidiaNoModeset,
      Vfio,
      AsusEgpu,
      AsusMuxDgpu,
      None,
     }
     -->
    <method name="Mode">
      <arg type="u" direction="out"/>
    </method>
    <!--
     Get list of supported modes
     -->
    <method name="Supported">
      <arg type="au" direction="out"/>
    </method>
    <!--
     Get the vendor name of the dGPU
     -->
    <method name="Vendor">
      <arg type="s" direction="out"/>
    </method>
    <!--
     Get the current power status:
     enum GfxPower {
         Active,
         Suspended,
         Off,
         AsusDisabled,
         Unknown,
     }
     -->
    <method name="Power">
      <arg type="u" direction="out"/>
    </method>
    <!--
     Set the graphics mode:
     enum GfxMode {
      Hybrid,
      Integrated,
      NvidiaNoModeset,
      Vfio,
      AsusEgpu,
      AsusMuxDgpu,
      None,
     }

     Returns action required:
     enum GfxRequiredUserAction {
      Logout,
      Reboot,
      SwitchToIntegrated,
      AsusEgpuDisable,
      Nothing,
     }
     -->
    <method name="SetMode">
      <arg name="mode" type="u" direction="in"/>
      <arg type="u" direction="out"/>
    </method>
    <!--
     Get the `String` name of the pending mode change if any
     -->
    <method name="PendingMode">
      <arg type="u" direction="out"/>
    </method>
    <!--
     Get the `String` name of the pending required user action if any
     -->
    <method name="PendingUserAction">
      <arg type="u" direction="out"/>
    </method>
    <!--
     Get the base config, args in order are:
     pub mode: GfxMode,
     vfio_enable: bool,
     vfio_save: bool,
     compute_save: bool,
     always_reboot: bool,
     no_logind: bool,
     logout_timeout_s: u64,
     -->
    <method name="Config">
      <arg type="(ubbbbtu)" direction="out"/>
    </method>
    <!--
     Set the base config, args in order are:
     pub mode: GfxMode,
     vfio_enable: bool,
     vfio_save: bool,
     compute_save: bool,
     always_reboot: bool,
     no_logind: bool,
     logout_timeout_s: u64,
     -->
    <method name="SetConfig">
      <arg name="config" type="(ubbbbtu)" direction="in"/>
    </method>
    <!--
     Be notified when the dgpu status changes:
     enum GfxPower {
         Active,
         Suspended,
         Off,
         AsusDisabled,
         AsusMuxDiscreet,
         Unknown,
     }
     -->
    <signal name="NotifyGfxStatus">
      <arg name="status" type="u"/>
    </signal>
    <!--
     Recieve a notification if the graphics mode changes and to which mode
     -->
    <signal name="NotifyGfx">
      <arg name="vendor" type="u"/>
    </signal>
    <!--
     Recieve a notification on required action if mode changes
     -->
    <signal name="NotifyAction">
      <arg name="action" type="u"/>
    </signal>
  </interface>
</node>
